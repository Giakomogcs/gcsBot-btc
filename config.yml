# config.yml (VERSÃO CORRIGIDA)

# Common connection details
influxdb_connection:
  url: "http://db:8086"
  token: "YOUR_INFLUXDB_API_TOKEN"
  org: "gcsbot_org"

# Per-mode configurations that specify the target bucket.
# These buckets MUST exist in your InfluxDB instance.
influxdb_trade:
  bucket: "jules_bot_trade_v1"

influxdb_test:
  bucket: "jules_bot_test_v1" # For paper trading

influxdb_backtest:
  bucket: "jules_bot_backtest_v1" # For historical simulation data


# Configurações do backtest (parâmetros da simulação)
backtest:
  start_date: "-10d"
  initial_capital: 100
  commission_rate: 0.001

app:
  use_testnet: true
  force_offline_mode: false
  symbol: "BTCUSDT"

# Caminhos para dados e modelos
data_paths:
  macro_data_dir: "data/input/macro"
  historical_data_file: "data/input/history/BTCUSDT-1m-data.csv"
  kaggle_bootstrap_file: "data/input/bootstrap/kaggle_btc_1m.csv"
  models_dir: "data/models"

# Configurações do pipeline de dados

data_pipeline:
  start_date_ingestion: "2023-01-01"
  # --- INÍCIO DA CORREÇÃO DOS NOMES DAS FEATURES ---
  # Alinhados com os nomes gerados em 'feature_engineering.py'
  regime_features: ["atr_14", "macd_diff_12_26_9", "rsi_14"]
  # --- FIM DA CORREÇÃO ---
  tags_for_master_table: ["target", "market_regime"]
  target:
    future_periods: 60
    profit_mult: 4.0
    stop_mult: 1.5

# Estratégia de Trading: o cérebro da tomada de decisão
trading_strategy:
  take_profit_percentage: 0.8
  buy_on_dip_percentage: -0.5

# Configuração do dimensionamento de posição
position_sizing:
  method: "Dynamic"
  risk_per_trade: 0.02

# Configurações do otimizador de modelos (Optuna)
optimizer:
  n_trials: 100
  quality_threshold: 0.55 # Limiar de qualidade para salvar um modelo
  objective_metric: "Profit Factor"

position_management:
  max_concurrent_trades: 15
  capital_per_trade_percent: 1.5
  max_total_capital_allocation_percent: 90 # Ex: Alocar no máximo 90% do capital total

dynamic_sizing:
  enabled: true
  performance_window_trades: 20 # A cada 20 trades, o bot reavalia a sua performance
  profit_factor_threshold: 1.6 # Se o Profit Factor for > 1.6, considera-se sucesso
  performance_upscale_factor: 1.2 # Se sucesso, multiplica o próximo risco por 1.2 (arrisca 20% a mais)
  performance_downscale_factor: 0.8 # Se falha, multiplica o próximo risco por 0.8 (arrisca 20% a menos)

# Configuração do logger
logging:
  level: "INFO"

# Configuração do Trailing Profit Target
trailing_profit:
  activation_percentage: 2.0 # Ativa o trailing quando o lucro não realizado atingir 2%
  trailing_percentage: 1.0 # Mantém o novo alvo de lucro 1% acima do preço mais alto
