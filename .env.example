# ==============================================================================
# JULES TRADING BOT - ENVIRONMENT VARIABLE CONFIGURATION
# ==============================================================================
#
# INSTRUCTIONS:
# 1. Copy this file to a new file named '.env' in the same directory.
# 2. Uncomment and set the values for the variables you want to override.
# 3. Variables set in this .env file will take precedence over the values
#    defined in 'config.ini'.
#
# HIERARCHY OF CONFIGURATION:
# 1. Environment Variables (e.g., set in your shell or Docker)
# 2. .env file (this file, when copied to .env)
# 3. config.ini file (the default values)
#
# NOTE: For multiple bots, you can create separate .env files (e.g., .env.my_second_bot)
# and specify which one to use by setting the BOT_NAME environment variable.
# For example: BOT_NAME=my_second_bot python run.py start
# The system will then look for an environment variable like 'MY_SECOND_BOT_ENV_FILE'
# to point to a specific .env file. If not found, it defaults to '.env'.

# ==============================================================================
# CORE BOT SETTINGS
# ==============================================================================

# The name of the bot instance. This is used for log file separation and for
# loading bot-specific environment variables.
# Example: BOT_NAME=my_main_bot
# BOT_NAME=jules_bot

# The mode the bot operates in. Can be 'trade' for live trading or 'test' for testnet.
# BOT_MODE=test

# Path to a specific .env file to load.
# ENV_FILE=.env

# Set to "1" to enable a special mode for scripts, affects logging.
# JULES_BOT_SCRIPT_MODE=0

# ==============================================================================
# DATABASE (POSTGRES)
# ==============================================================================
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=user
POSTGRES_PASSWORD=password
POSTGRES_DB=jules_bot_db

# ==============================================================================
# BINANCE API KEYS
# ==============================================================================

# Live Trading Account Keys
BINANCE_API_KEY=
BINANCE_API_SECRET=

# Testnet Account Keys
BINANCE_TESTNET_API_KEY=
BINANCE_TESTNET_API_SECRET=

# ==============================================================================
# GENERAL APPLICATION SETTINGS
# ==============================================================================
APP_SYMBOL=BTCUSDT
# Set to 'true' to prevent the bot from making any calls to the exchange API.
APP_FORCE_OFFLINE_MODE=false
# Set to 'true' to use the Binance Testnet, 'false' for the live market.
APP_USE_TESTNET=true
# How often (in seconds) to recalculate the portfolio's total equity.
APP_EQUITY_RECALCULATION_INTERVAL=3600

# ==============================================================================
# CORE TRADING STRATEGY RULES
# ==============================================================================
# These are global rules that can be overridden by regime-specific settings.

# Commission rate per trade on the exchange.
STRATEGY_RULES_COMMISSION_RATE=0.001
# Percentage of a position to sell (e.g., 0.9 means sell 90%).
STRATEGY_RULES_SELL_FACTOR=0.9
# Default target profit percentage for a trade if not set by a regime.
STRATEGY_RULES_TARGET_PROFIT=0.02
# Maximum percentage of total capital to be used in a single trade.
STRATEGY_RULES_MAX_CAPITAL_PER_TRADE_PERCENT=0.02
# Base amount in USDT for a trade if not using percentage-based sizing.
STRATEGY_RULES_BASE_USD_PER_TRADE=20.0
# The absolute maximum number of open positions allowed.
STRATEGY_RULES_MAX_OPEN_POSITIONS=20
# Use dynamic capital management features.
STRATEGY_RULES_USE_DYNAMIC_CAPITAL=true
# Percentage of total equity to be used as working capital.
STRATEGY_RULES_WORKING_CAPITAL_PERCENTAGE=0.75
# Use a simple percentage of free cash for sizing orders.
STRATEGY_RULES_USE_PERCENTAGE_BASED_SIZING=false
# The percentage of free cash to use for an order.
STRATEGY_RULES_ORDER_SIZE_FREE_CASH_PERCENTAGE=0.004
# Use a dynamic formula for sizing based on portfolio value.
STRATEGY_RULES_USE_FORMULA_SIZING=true
# The minimum percentage of free cash to use in the formula.
STRATEGY_RULES_MIN_ORDER_PERCENTAGE=0.004
# The maximum percentage of free cash to use in the formula.
STRATEGY_RULES_MAX_ORDER_PERCENTAGE=0.02
# The scaling factor for the logarithmic sizing formula.
STRATEGY_RULES_LOG_SCALING_FACTOR=0.002
# Enable the strategy where the bot waits for a price reversal after a dip signal.
STRATEGY_RULES_USE_REVERSAL_BUY_STRATEGY=true
# The percentage the price must rise from its low to confirm a reversal.
STRATEGY_RULES_REVERSAL_BUY_THRESHOLD_PERCENT=0.001
# How long (in seconds) to monitor for a reversal before the signal expires.
STRATEGY_RULES_REVERSAL_MONITORING_TIMEOUT_SECONDS=900

# ==============================================================================
# TRADING STRATEGY IDENTIFIERS
# ==============================================================================
TRADING_STRATEGY_NAME=Dynamic_DCA_with_Regimes
# Minimum trade size in USDT.
TRADING_STRATEGY_MIN_TRADE_SIZE_USDT=10.0
# Maximum trade size in USDT.
TRADING_STRATEGY_MAX_TRADE_SIZE_USDT=10000.0

# ==============================================================================
# REGIME-SPECIFIC PARAMETERS
# ==============================================================================
# These override the default strategy rules based on the detected market regime.
# Regime 0: Low Volatility / Ranging
# Regime 1: Moderate Uptrend
# Regime 2: High Volatility / Strong Trend
# Regime 3: Downtrend / Cautious

# --- REGIME 0 ---
REGIME_0_TARGET_PROFIT=0.01
REGIME_0_BUY_DIP_PERCENTAGE=0.015
REGIME_0_SELL_RISE_PERCENTAGE=0.01
REGIME_0_ORDER_SIZE_USD=15.0

# --- REGIME 1 ---
REGIME_1_TARGET_PROFIT=0.02
REGIME_1_BUY_DIP_PERCENTAGE=0.025
REGIME_1_SELL_RISE_PERCENTAGE=0.015
REGIME_1_ORDER_SIZE_USD=25.0

# --- REGIME 2 ---
REGIME_2_TARGET_PROFIT=0.03
REGIME_2_BUY_DIP_PERCENTAGE=0.035
REGIME_2_SELL_RISE_PERCENTAGE=0.02
REGIME_2_ORDER_SIZE_USD=40.0

# --- REGIME 3 ---
REGIME_3_TARGET_PROFIT=0.01
REGIME_3_BUY_DIP_PERCENTAGE=0.04
REGIME_3_SELL_RISE_PERCENTAGE=0.025
REGIME_3_ORDER_SIZE_USD=10.0

# ==============================================================================
# BACKTESTING SETTINGS
# ==============================================================================
BACKTEST_INITIAL_BALANCE=10000.0
BACKTEST_COMMISSION_FEE=0.001
BACKTEST_DEFAULT_LOOKBACK_DAYS=730

# ==============================================================================
# DATA SETTINGS
# ==============================================================================
DATA_HISTORICAL_DATA_BUCKET=jules-bot-historical-data
DATA_PATHS_HISTORICAL_DATA_FILE=data/historical_data_BTCUSDT.parquet
DATA_PATHS_MACRO_DATA_DIR=data/macro_data
DATA_PATHS_MODELS_DIR=data/models

# ==============================================================================
# DATA PIPELINE SETTINGS
# ==============================================================================
DATA_PIPELINE_FUTURE_PERIODS=24
DATA_PIPELINE_PROFIT_MULT=3.0
DATA_PIPELINE_STOP_MULT=3.0
DATA_PIPELINE_REGIME_FEATURES=fear_greed,close
DATA_PIPELINE_REGIME_ROLLING_WINDOW=14
DATA_PIPELINE_START_DATE_INGESTION=2017-01-01

# ==============================================================================
# API SETTINGS (If using the provided API)
# ==============================================================================
API_PORT=8000
API_MEASUREMENT=trades
API_UPDATE_INTERVAL=60
